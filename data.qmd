---
title: "Crisis risk dashboard"
author: "Sean Ng"
date: "13 June 2024"
toc: true
toc-location: left
toc-depth: 4
format: 
  html:
    page-layout: full
    code-tools: true
    self-contained: true
---


```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
                      fig.width = 9.5)

library(tidyverse)
library(here)
library(lubridate)
library(patchwork)
library(scales)
library(sf)
library(broom)
library(treemapify)
library(kableExtra)
library(readxl)
library(countrycode)
library(viridis)

`%out%` <- Negate(`%in%`)
options(scipen = 100)
theme_set(theme_light())

show_col(viridis_pal(option = "cividis")(8))

```

# Data 

```{r data}
country_list <- c("Afghanistan", "Bangladesh", "Bhutan", "Cambodia", 
                  "China", "Fiji", "Hong Kong", "India", "Indonesia", 
                  "Iran", "North Korea", "South Korea", "Laos", 
                  "Malaysia", "Maldives", "Mongolia", "Myanmar", 
                  "Nepal", "Pakistan", "Papua New Guinea", "Philippines", 
                  "Solomon Islands", "Sri Lanka", "Thailand", "Timor-Leste", 
                  "Vanuatu", "Vietnam")

net_freedom <- read_xlsx(here("data", "Freedom on the net 2023-11.xlsx")) |> 
  janitor::clean_names() |> 
  filter(country %in% country_list) |> 
  rename(year = edition)

world_freedom <- read_xlsx(here("data", "Freedom In the World 2024-13.xlsx"), 
                           sheet = 2, 
                           skip = 1) |> 
  janitor::clean_names() |> 
  rename(country = country_territory, 
         year = edition) |> 
  filter(country %in% country_list)

world_shape <- st_read(here("data", 
                            "world-administrative-boundaries", 
                            "world-administrative-boundaries.shp"), 
                       quiet = TRUE)
  
```


## Special procedures 

```{r}
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |> 
  janitor::clean_names() |> 
  mutate(vulnerable_groups = 
           ifelse(
             str_detect(mandates, 
                        "minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"), 
             1, 0),
         women_and_girls = 
           ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"), 
                  1, 0), 
         human_rights_defenders = 
           ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"), 
                  1, 0)) |> 
  separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |> 
  pivot_longer(cols = mandate1:mandate20, 
               names_to = "ignore", 
               values_to = "mandate") |> 
  filter(!is.na(mandate)) |> 
  select(-ignore) |> 
  rename(alleged_victims = nb_of_alleged_victims) |> 
  mutate(country = case_when(
    country == "Democratic People's Republic of Korea" ~ "North Korea",
    country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)", 
    country == "Lao People's Democratic Republic" ~ "Laos", 
    country == "Viet Nam" ~ "Vietnam", 
    country == "Republic of Korea" ~ "South Korea", 
    TRUE ~ country)) |> 
  mutate(mandate = str_to_lower(mandate)) 
```

```{r}
special_procedures_top5 <- special_procedures |>
  filter(country %in% country_list) |> 
  group_by(country, mandate) |> 
  summarise(count = n_distinct(ref_no)) |> 
  mutate(country_iso = countrycode(country,
                                   origin = "country.name", 
                                   destination = "iso3c")) |> 
  arrange(desc(count)) |> 
  slice(1:5) |> 
  mutate(mandate = str_to_title(mandate)) |> 
  ungroup()

special_procedures_top5 |> 
  write_csv(here("data", "special_procedures_top5.csv"))

special_procedures_order <- special_procedures_top5 |> 
  count(country, wt = count, sort = TRUE) |> 
  slice(1:12) |> pull(country)

special_procedures_top5 |> 
  filter(country %in% special_procedures_order) |>
  ggplot(aes(x = count, 
             y = mandate)) + 
  geom_col() + 
  facet_wrap(~ country, 
             scales = "free")
```

```{r}
special_procedures_filtered <- special_procedures |> 
  filter(country %in% country_list)

special_procedures_filtered |> write_csv(here("data", "special_procedures_filtered.csv"))
```


```{r}
special_procedures_filtered |> 
  left_join(
    population_estimates |> 
      filter(country %in% country_list & 
               year == 2023) |> 
      select(country, population),
    by = "country"
  ) 

population_estimates <- read_csv(here("data", "population_estimates.csv"))

population_estimates |> 
  filter(country %in% country_list) |> 
  filter(year == 2023)
  
```


```{r}
special_procedures |> 
  filter(country %in% country_list) |> 
  filter(vulnerable_groups > 0) |> 
  group_by(mandate) |> 
  summarise(count = n_distinct(ref_no)) |> 
  arrange(desc(count))
```



```{r}
country_list

special_procedures |> 
  filter(un_region == "Asia-Pacific Group" | 
           ohchr_region == "Asia Pacific") |> 
  mutate(country = case_when(
    country == "Democratic People's Republic of Korea" ~ "North Korea",
    country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)", 
    country == "Lao People's Democratic Republic" ~ "Laos", 
    country == "Viet Nam" ~ "Vietnam", 
    country == "Republic of Korea" ~ "South Korea", 
    TRUE ~ country)) |> 
  filter(country %in% country_list) |> 
  count(country)
```

## World freedom

```{r}
world_freedom_filtered <- world_freedom |>
  select(country, 
         year, status, 
         electoral_process = a, 
         pluralism_participation = b, 
         functioning_government = c, 
         freedom_of_expression = d, 
         right_to_assembly = e, 
         rule_of_law = f, 
         personal_autonomy = g, 
         political_rights = pr, 
         civil_liberties = cl, 
         total) |> 
  pivot_longer(cols = c(electoral_process:total),
               names_to = "sub_indicator", 
               values_to = "score") |> 
  filter(!is.na(score)) |> 
  mutate(sub_indicator_category = 
           case_when(
             sub_indicator %in% c("electoral_process",
                                  "pluralism_participation",
                                  "functioning_government") ~ "political_rights", 
            sub_indicator %in% c("freedom_of_expression",
                                 "right_to_assembly", 
                                 "rule_of_law", 
                                 "personal_autonomy") ~ "civil_liberties", 
            TRUE ~ "aggregation"
           )) |> 
  mutate(country_iso = countrycode(country,
                                   origin = "country.name", 
                                   destination = "iso3c")) 

world_freedom_filtered |> 
  write_csv(here("data", "world_freedom_filtered.csv"))
```


```{r}
world_freedom_filtered |> 
  filter(year == 2024 & 
           sub_indicator == "total") |> 
  arrange(desc(score))
```

## Net freedom

```{r}
net_freedom_map <- net_freedom |> 
  filter(country %in% country_list) |> 
  select(country, year, total_country_score) |> 
  mutate(country_iso = countrycode(country,
                                   origin = "country.name", 
                                   destination = "iso3c")) |> 
  mutate(freedom_status = case_when(
    total_country_score <= 39 ~ "Not free",
    total_country_score > 39 & total_country_score <= 69 ~ "Partly free",
    total_country_score > 39 ~ "Free"))

net_freedom_map |> write_csv(here("data", "net_freedom_map.csv"))

net_freedom_map |> 
  left_join(world_shape, 
             by = c("country_iso" = "iso3")) |> 
  st_as_sf() |> 
  ggplot() + 
  geom_sf(size = .1, colour = "grey", 
          aes(fill = total_country_score)) 
  coord_sf(xlim = c("37", "135"), 
                  ylim = c("-35", "60"),lims_method = "geometry_bbox")
  

```


```{r}
net_freedom_charts <- net_freedom |> 
  filter(country %in% country_list) |> 
  pivot_longer(cols = a1:total_country_score, 
               names_to = "sub_indicator", 
               values_to = "score") |> 
  mutate(sub_indicator_text =
           case_when(
             sub_indicator == "a1" ~ "Infrastructural limitations", 
             sub_indicator == "a2" ~ "Internet accesibility",
             sub_indicator == "a3" ~ "Government restrictions", 
             sub_indicator == "a4" ~ "Service provider diversity", 
             sub_indicator == "a5" ~ "Regulatory failure", 
             sub_indicator == "b1" ~ "Blocked content", 
             sub_indicator == "b2" ~ "Forced content deletion", 
             sub_indicator == "b3" ~ "Opaque, unacccountable procedures", 
             sub_indicator == "b4" ~ "Self-censorship", 
             sub_indicator == "b5" ~ "Information control and manipulation", 
             sub_indicator == "b6" ~ "Constraints on publishing", 
             sub_indicator == "b7" ~ "Lack diversity and reliability", 
             sub_indicator == "b8" ~ "Constraints on communities", 
             sub_indicator == "c1" ~ "Legal protections", 
             sub_indicator == "c2" ~ "Criminalised online activities",  
             sub_indicator == "c3" ~ "Individuals penalised", 
             sub_indicator == "c4" ~ "Restricted anonymous communication", 
             sub_indicator == "c5" ~ "State infringement of privacy", 
             sub_indicator == "c6" ~ "Data monitoring and retention", 
             sub_indicator == "c7" ~ "Extralegal intimidation", 
             sub_indicator == "c8" ~ "Cyberattacks", 
             TRUE ~ sub_indicator
           )) |> 
  mutate(sub_index_group = 
           case_when(
             str_detect(sub_indicator, "a[0-9]") ~ "A. Obstructions to access", 
             str_detect(sub_indicator, "b[0-9]") ~ "B. Limits on content", 
             str_detect(sub_indicator, "c[0-9]") ~ "C. Violation of user rights", 
             TRUE ~ "aggregation"
           )) |> 
  filter(!is.na(score))
  
net_freedom_charts |> write_csv(here("data", "net_freedom_charts.csv"))

net_freedom_charts |> filter(!is.numeric(score))

net_freedom_charts |> filter(is.na(score))
```







