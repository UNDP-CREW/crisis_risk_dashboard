values_to = "violation_long") |>
filter(!is.na(violation_long))
hrd |>
filter(str_detect(date_added, "2023")) |>
separate(violation, sep = "\\|", remove = FALSE,
into = paste0("violation", 1:7)) |>
pivot_longer(cols = violation1:violation7,
names_to = "ignore",
values_to = "violation_long") |>
filter(!is.na(violation_long)) |> glimpse()
hrd |> count(country)
hrd |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
filter(is.na(country_iso))
hrd |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
separate(violation, sep = "\\|", remove = FALSE,
into = paste0("violation", 1:7)) |>
pivot_longer(cols = violation1:violation7,
names_to = "ignore",
values_to = "violation_long") |>
filter(!is.na(violation_long)) |> glimpse()
group_by(violation_long, country) |>
summarise(event_count = n_distinct(serial_number),
average_impact = mean(impact_of_event, na.rm = TRUE),
.groups = "drop")
hrd |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
separate(violation, sep = "\\|", remove = FALSE,
into = paste0("violation", 1:7)) |>
pivot_longer(cols = violation1:violation7,
names_to = "ignore",
values_to = "violation_long") |>
filter(!is.na(violation_long)) |>
group_by(violation_long, country) |>
summarise(event_count = n_distinct(serial_number),
average_impact = mean(impact_of_event, na.rm = TRUE),
.groups = "drop")
hrd_violation_chart <- hrd |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
separate(violation, sep = "\\|", remove = FALSE,
into = paste0("violation", 1:7)) |>
pivot_longer(cols = violation1:violation7,
names_to = "ignore",
values_to = "violation_long") |>
filter(!is.na(violation_long)) |>
group_by(violation_long, country) |>
summarise(event_count = n_distinct(serial_number),
average_impact = mean(impact_of_event, na.rm = TRUE),
.groups = "drop") |>
write_csv(here("data", "hrd_violation_chart.csv"))
hrd_violation_chart <- hrd |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
separate(violation, sep = "\\|", remove = FALSE,
into = paste0("violation", 1:7)) |>
pivot_longer(cols = violation1:violation7,
names_to = "ignore",
values_to = "violation_long") |>
filter(!is.na(violation_long)) |>
group_by(violation_long, country) |>
summarise(event_count = n_distinct(serial_number),
average_impact = mean(impact_of_event, na.rm = TRUE),
.groups = "drop")
hrd_violation_chart
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
fig.width = 9.5)
library(tidyverse)
library(here)
library(lubridate)
library(patchwork)
library(scales)
library(sf)
library(broom)
library(treemapify)
library(kableExtra)
library(readxl)
library(countrycode)
library(viridis)
`%out%` <- Negate(`%in%`)
options(scipen = 100)
theme_set(theme_light())
show_col(viridis_pal(option = "cividis")(8))
country_list <- c("Afghanistan", "Bangladesh", "Bhutan", "Cambodia",
"China", "Fiji", "Hong Kong", "India", "Indonesia",
"Iran", "North Korea", "South Korea", "Laos",
"Malaysia", "Maldives", "Mongolia", "Myanmar",
"Nepal", "Pakistan", "Papua New Guinea", "Philippines",
"Solomon Islands", "Sri Lanka", "Thailand", "Timor-Leste",
"Vanuatu", "Vietnam")
world_shape <- st_read(here("data",
"world-administrative-boundaries",
"world-administrative-boundaries.shp"),
quiet = TRUE)
population_estimates <- read_csv(here("data", "population_estimates.csv"))
aggregation_list <- c("AFRICA",
"ASIA",
"Central and Southern Asia",
"Central America",
"Central Asia",
"EUROPE",
"Eastern Africa",
"Eastern Asia",
"Eastern Europe",
"Eastern and South-Eastern Asia",
"High-income countries",
"LATIN AMERICA AND THE CARIBBEAN",
"Land-locked Developing Countries (LLDC)",
"Latin America and the Caribbean",
"Least developed countries",
"Less developed regions",
"Less developed regions, excluding China",
"Less developed regions, excluding least developed countries",
"Low-income countries",
"Lower-middle-income countries",
"Middle-income countries",
"Middle Africa",
"NORTHERN AMERICA",
"Northern Africa",
"Northern Africa and Western Asia",
"Northern Europe",
"OCEANIA",
"Oceania (excluding Australia and New Zealand)",
"Small island developing States (SIDS)",
"Sub-Saharan Africa",
"Upper-middle-income countries",
"Western Africa",
"Western Asia",
"Western Europe",
"Western Sahara",
"WORLD",
"Australia and New Zealand",
"Europe and Northern America",
"Developed regions",
"South-Eastern Asia",
"Southern Asia")
read_excel(here("data", "undesa_pd_2020_ims_stock_by_sex_destination_and_origin.xlsx"),
sheet = 2,
skip = 8) |>
janitor::clean_names() |>
pivot_longer(cols = 8:28,
names_to = "name",
values_to = "value") |>
mutate(name = str_replace(name, "x", ""))|>
mutate(sex = case_when(
name %in% c("1990_8", "1995_9", "2000_10", "2005_11",
"2010_12", "2015_13", "2020_14") ~ "total",
name %in% c("1990_15", "1995_16", "2000_17", "2005_18",
"2010_19", "2015_20", "2020_21") ~ "male",
name %in% c("1990_22", "1995_23", "2000_24", "2005_25",
"2010_26", "2015_27", "2020_28") ~ "male",
TRUE ~ "wrong"
)) |>
mutate(year = as.numeric(str_sub(name, start = 1L, end = 4L))) |>
rename(area_of_destination = region_development_group_country_or_area_of_destination,
area_of_origin = region_development_group_country_or_area_of_origin) %>%
mutate_at(vars(area_of_destination, area_of_origin),
.funs = ~str_replace_all(., "\\*", "")) |>
mutate(aggregation = ifelse(
area_of_origin %in% aggregation_list |
area_of_destination %in% aggregation_list,
"yes", "no"
))
migrant <- read_excel(here("data", "undesa_pd_2020_ims_stock_by_sex_destination_and_origin.xlsx"),
sheet = 2,
skip = 8) |>
janitor::clean_names() |>
pivot_longer(cols = 8:28,
names_to = "name",
values_to = "value") |>
mutate(name = str_replace(name, "x", ""))|>
mutate(sex = case_when(
name %in% c("1990_8", "1995_9", "2000_10", "2005_11",
"2010_12", "2015_13", "2020_14") ~ "total",
name %in% c("1990_15", "1995_16", "2000_17", "2005_18",
"2010_19", "2015_20", "2020_21") ~ "male",
name %in% c("1990_22", "1995_23", "2000_24", "2005_25",
"2010_26", "2015_27", "2020_28") ~ "male",
TRUE ~ "wrong"
)) |>
mutate(year = as.numeric(str_sub(name, start = 1L, end = 4L))) |>
rename(area_of_destination = region_development_group_country_or_area_of_destination,
area_of_origin = region_development_group_country_or_area_of_origin) %>%
mutate_at(vars(area_of_destination, area_of_origin),
.funs = ~str_replace_all(., "\\*", "")) |>
mutate(aggregation = ifelse(
area_of_origin %in% aggregation_list |
area_of_destination %in% aggregation_list,
"yes", "no"
)) %>%
mutate_at(vars(area_of_destination,
area_of_origin),
.funs = ~case_when(
. == "China, Hong Kong SAR" ~ "Hong Kong",
. == "Dem. People's Republic of Korea" ~ "North Korea",
. == "Iran (Islamic Republic of)" ~ "Iran",
. == "Lao People's Democratic Republic" ~ "Laos",
. == "Republic of Korea" ~ "South Korea",
. == "Viet Nam" ~ "Vietnam",
TRUE ~ .
))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination) |>
summarise(migrants = sum(value, na.rm = TRUE)) |>
arrange(desc(migrants))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
count(year)
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
filter(year == 2020) |>
group_by(area_of_origin, area_of_destination) |>
summarise(migrants = sum(value, na.rm = TRUE)) |>
arrange(desc(migrants))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
filter(year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE)) |>
arrange(desc(migrants))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
filter(year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE)) |>
pivot_wider(names_from = "year", values_from = "migrants")
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
filter(year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "frop") |>
pivot_wider(names_from = "year", values_from = "migrants")
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
filter(year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year", values_from = "migrants")
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
filter(year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop")
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year", values_from = "migrants")
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year", values_from = "migrants", values_fill = 0)
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year",
values_from = "migrants",
values_fill = 0,
names_prefix = "year_") |>
mutate(increase_1990 = year_2020 - year_1990,
increase_1990_pc = increase / year_1990,
increase_2010 = year_2020 - year_2010,
increase_2010_pc = increase_2010 / year_2010) |>
arrange(desc(increase_2010_pc))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year",
values_from = "migrants",
values_fill = 0,
names_prefix = "year_") |>
mutate(increase_1990 = year_2020 - year_1990,
increase_1990_pc = increase_1990 / year_1990,
increase_2010 = year_2020 - year_2010,
increase_2010_pc = increase_2010 / year_2010) |>
arrange(desc(increase_2010_pc))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year",
values_from = "migrants",
values_fill = 0,
names_prefix = "year_") |>
mutate(increase_1990 = year_2020 - year_1990,
increase_1990_pc = increase_1990 / year_1990,
increase_2010 = year_2020 - year_2010,
increase_2010_pc = increase_2010 / year_2010) %>%
mutate_at(vars(increase_1990_pc, increase_2010_pc),
.funs = ~ifelse(is.infinite(.), 1, .))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year",
values_from = "migrants",
values_fill = 0,
names_prefix = "year_") |>
mutate(increase_1990 = year_2020 - year_1990,
increase_1990_pc = increase_1990 / year_1990,
increase_2010 = year_2020 - year_2010,
increase_2010_pc = increase_2010 / year_2010) %>%
mutate_at(vars(increase_1990_pc, increase_2010_pc),
.funs = ~ifelse(is.infinite(.), 1, .)) |>
arrange(desc(increase_2010_pc))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year",
values_from = "migrants",
values_fill = 0,
names_prefix = "year_") |>
mutate(increase_1990 = year_2020 - year_1990,
increase_1990_pc = increase_1990 / year_1990,
increase_2010 = year_2020 - year_2010,
increase_2010_pc = increase_2010 / year_2010) %>%
mutate_at(vars(increase_1990_pc, increase_2010_pc),
.funs = ~ifelse(is.infinite(.), 1, .)) |>
arrange(desc(increase_2010))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total" & year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop")
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total" & year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
group_by(area_of_destination) |>
summarise(migrants = sum(migrants))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total" & year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
group_by(area_of_destination) |>
summarise(migrants = sum(migrants, na.rm = TRUE)) |>
arrange(desc(area_of_destination))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total" & year == 2020) |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
group_by(area_of_destination) |>
summarise(migrants = sum(migrants, na.rm = TRUE)) |>
arrange(desc(migrants))
aggregation_list <- c("AFRICA",
"ASIA",
"Central and Southern Asia",
"Central America",
"Central Asia",
"EUROPE",
"Eastern Africa",
"Eastern Asia",
"Eastern Europe",
"Eastern and South-Eastern Asia",
"High-income countries",
"LATIN AMERICA AND THE CARIBBEAN",
"Land-locked Developing Countries (LLDC)",
"Latin America and the Caribbean",
"Least developed countries",
"Less developed regions",
"Less developed regions, excluding China",
"Less developed regions, excluding least developed countries",
"Low-income countries",
"Lower-middle-income countries",
"Middle-income countries",
"Middle Africa",
"NORTHERN AMERICA",
"Northern Africa",
"Northern Africa and Western Asia",
"Northern Europe",
"OCEANIA",
"Oceania (excluding Australia and New Zealand)",
"Small island developing States (SIDS)",
"Sub-Saharan Africa",
"Upper-middle-income countries",
"Western Africa",
"Western Asia",
"Western Europe",
"Western Sahara",
"WORLD",
"Australia and New Zealand",
"Europe and Northern America",
"Developed regions",
"South-Eastern Asia",
"Southern Asia",
"Southern Europe")
migrant <- read_excel(here("data", "undesa_pd_2020_ims_stock_by_sex_destination_and_origin.xlsx"),
sheet = 2,
skip = 8) |>
janitor::clean_names() |>
pivot_longer(cols = 8:28,
names_to = "name",
values_to = "value") |>
mutate(name = str_replace(name, "x", ""))|>
mutate(sex = case_when(
name %in% c("1990_8", "1995_9", "2000_10", "2005_11",
"2010_12", "2015_13", "2020_14") ~ "total",
name %in% c("1990_15", "1995_16", "2000_17", "2005_18",
"2010_19", "2015_20", "2020_21") ~ "male",
name %in% c("1990_22", "1995_23", "2000_24", "2005_25",
"2010_26", "2015_27", "2020_28") ~ "male",
TRUE ~ "wrong"
)) |>
mutate(year = as.numeric(str_sub(name, start = 1L, end = 4L))) |>
rename(area_of_destination = region_development_group_country_or_area_of_destination,
area_of_origin = region_development_group_country_or_area_of_origin) %>%
mutate_at(vars(area_of_destination, area_of_origin),
.funs = ~str_replace_all(., "\\*", "")) |>
mutate(aggregation = ifelse(
area_of_origin %in% aggregation_list |
area_of_destination %in% aggregation_list,
"yes", "no"
)) %>%
mutate_at(vars(area_of_destination,
area_of_origin),
.funs = ~case_when(
. == "China, Hong Kong SAR" ~ "Hong Kong",
. == "Dem. People's Republic of Korea" ~ "North Korea",
. == "Iran (Islamic Republic of)" ~ "Iran",
. == "Lao People's Democratic Republic" ~ "Laos",
. == "Republic of Korea" ~ "South Korea",
. == "Viet Nam" ~ "Vietnam",
TRUE ~ .
))
migrant  |>
filter(aggregation == "no") |>
filter(area_of_destination %in% country_list |
area_of_origin %in% country_list) |>
filter(value != 0 & sex == "total") |>
group_by(area_of_origin, area_of_destination, year) |>
summarise(migrants = sum(value, na.rm = TRUE), .groups = "drop") |>
pivot_wider(names_from = "year",
values_from = "migrants",
values_fill = 0,
names_prefix = "year_") |>
mutate(increase_1990 = year_2020 - year_1990,
increase_1990_pc = increase_1990 / year_1990,
increase_2010 = year_2020 - year_2010,
increase_2010_pc = increase_2010 / year_2010) %>%
mutate_at(vars(increase_1990_pc, increase_2010_pc),
.funs = ~ifelse(is.infinite(.), 1, .)) |>
arrange(desc(increase_2010))
