count(country)
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(sp_count = n_distinct(serial_no))
special_procedures
special_procedures |>
filter(country %in% country_list)
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(sp_count = n_distinct(ref_no))
special_procedures |>
filter(country %in% country_list) |>
count(mandate)
special_procedures |>
filter(country %in% country_list) |>
count(mandate, sort = TRUE)
special_procedures |>
filter(country %in% country_list) |>
count(mandate, sort = TRUE) |>
mutate(human_rights_groups =
ifelse(
str_detect(mandate,
"Defenders|Minority|Women|Indigenous|Migrants|Myanmar|Cambodia|Slavery|Persons|Children|Sexual Orientation|Girls|Older|African"),
mandate,
TRUE ~ NA_character_)) |>
count(human_rights_groups)
special_procedures |>
filter(country %in% country_list) |>
count(mandate, sort = TRUE) |>
mutate(human_rights_groups =
ifelse(
str_detect(mandate,
"Defenders|Minority|Women|Indigenous|Migrants|Myanmar|Cambodia|Slavery|Persons|Children|Sexual Orientation|Girls|Older|African"),
mandate, NA_character_)) |>
count(human_rights_groups)
special_procedures |>
filter(country %in% country_list) |>
mutate(human_rights_groups =
ifelse(
str_detect(mandate,
"Defenders|Minority|Women|Indigenous|Migrants|Myanmar|Cambodia|Slavery|Persons|Children|Sexual Orientation|Girls|Older|African"),
mandate, NA_character_)) |>
count(human_rights_groups)
special_procedures |>
filter(country %in% country_list) |>
count(mandate)
special_procedures |>
filter(country %in% country_list) |>
count(mandate, sort = TRUE)
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandate,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandate, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandate, "Lawyer|lawyer|Judge|judge|Defender|defender"))) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country))
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandates,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"))) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country))
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandates,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"),
1, 0)) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country))
special_procedures |>
filter(country %in% country_list) |>
ggplot(aes(x = vulnerable_groups,
y = country)) +
geom_col()
special_procedures |>
filter(country %in% country_list) |>
filter(vulnerable_groups > 0) |>
group_by(mandate) |>
summarise(count = n_distinct(ref_no))
special_procedures |>
filter(country %in% country_list) |>
filter(vulnerable_groups > 0) |>
group_by(mandate) |>
summarise(count = n_distinct(ref_no)) |>
arrange(desc(count))
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandates,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"),
1, 0)) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country)) |>
mutate(mandate = str_to_lower(mandate))
special_procedures |>
filter(country %in% country_list) |>
filter(vulnerable_groups > 0) |>
group_by(mandate) |>
summarise(count = n_distinct(ref_no)) |>
arrange(desc(count))
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(count = n_distinct(ref_no))
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandates,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"),
1, 0)) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country)) |>
mutate(mandate = str_to_lower(mandate)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c"))
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandates,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"),
1, 0)) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country)) |>
mutate(mandate = str_to_lower(mandate))
world_shape
?scale_fill_viridis
viridis
?scale_fill_viridis_c
special_procedures |>
filter(country %in% country_list) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
group_by(country) |>
summarise(count = n_distinct(ref_no)) |>
left_join(world_shape, by = c("country_iso" = "iso3")) |>
st_as_sf() |>
ggplot() +
geom_sf(size = .1,
aes(fill = count)) +
scale_fill_viridis(option = "turbo")
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
left_join(world_shape, by = c("country_iso" = "iso3")) |>
st_as_sf() |>
ggplot() +
geom_sf(size = .1,
aes(fill = count)) +
scale_fill_viridis(option = "turbo")
library(viridis)
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
left_join(world_shape, by = c("country_iso" = "iso3")) |>
st_as_sf() |>
ggplot() +
geom_sf(size = .1,
aes(fill = count)) +
scale_fill_viridis(option = "turbo")
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
left_join(world_shape, by = c("country_iso" = "iso3")) |>
st_as_sf() |>
ggplot() +
geom_sf(size = .1,
aes(fill = count)) +
scale_fill_viridis(option = "turbo") +
coord_sf(xlim = c("37", "135"),
ylim = c("-35", "60"),lims_method = "geometry_bbox")
net_freedom_map <- net_freedom |>
filter(country %in% country_list) |>
select(country, year, total_country_score) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
mutate(freedom_status = case_when(
total_country_score <= 39 ~ "Not free",
total_country_score > 39 & total_country_score <= 69 ~ "Partly free",
total_country_score > 39 ~ "Free"))
net_freedom_map |>
left_join(world_shape,
by = c("country_iso" = "iso3")) |>
st_as_sf() |>
ggplot() +
geom_sf(size = .1, colour = "grey",
aes(fill = total_country_score))
special_procedures |>
filter(country %in% country_list) |>
group_by(country) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
left_join(world_shape, by = c("country_iso" = "iso3")) |>
st_as_sf() |>
ggplot() +
geom_sf(size = .1,
aes(fill = count))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
fig.width = 9.5)
library(tidyverse)
library(here)
library(lubridate)
library(patchwork)
library(scales)
library(sf)
library(broom)
library(treemapify)
library(kableExtra)
library(readxl)
library(countrycode)
library(viridis)
`%out%` <- Negate(`%in%`)
options(scipen = 100)
theme_set(theme_light())
show_col(viridis_pal(option = "cividis")(8))
country_list <- c("Afghanistan", "Bangladesh", "Bhutan", "Cambodia",
"China", "Fiji", "Hong Kong", "India", "Indonesia",
"Iran", "North Korea", "South Korea", "Laos",
"Malaysia", "Maldives", "Mongolia", "Myanmar",
"Nepal", "Pakistan", "Papua New Guinea", "Philippines",
"Solomon Islands", "Sri Lanka", "Thailand", "Timor-Leste",
"Vanuatu", "Vietnam")
net_freedom <- read_xlsx(here("data", "Freedom on the net 2023-11.xlsx")) |>
janitor::clean_names() |>
filter(country %in% country_list) |>
rename(year = edition)
world_freedom <- read_xlsx(here("data", "Freedom In the World 2024-13.xlsx"),
sheet = 2,
skip = 1) |>
janitor::clean_names() |>
rename(country = country_territory,
year = edition) |>
filter(country %in% country_list)
world_shape <- st_read(here("data",
"world-administrative-boundaries",
"world-administrative-boundaries.shp"),
quiet = TRUE)
special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no))
special_procedures <- read_xlsx(here("data", "Special Procedurces Communications Data.xlsx")) |>
janitor::clean_names() |>
mutate(vulnerable_groups =
ifelse(
str_detect(mandates,
"minority|women|indigenous|migrants|myanmar|cambodia|slavery|persons|children|sexual orientation|girls|older|African|disability|Korea|racism|trafficking"),
1, 0),
women_and_girls =
ifelse(str_detect(mandates, "Women|women|woman|Woman|Girl|girl"),
1, 0),
human_rights_defenders =
ifelse(str_detect(mandates, "Lawyer|lawyer|Judge|judge|Defender|defender"),
1, 0)) |>
separate(mandates, sep = "\r\n", remove = TRUE, into = paste0("mandate", 1:20)) |>
pivot_longer(cols = mandate1:mandate20,
names_to = "ignore",
values_to = "mandate") |>
filter(!is.na(mandate)) |>
select(-ignore) |>
rename(alleged_victims = nb_of_alleged_victims) |>
mutate(country = case_when(
country == "Democratic People's Republic of Korea" ~ "North Korea",
country == "Iran (Islamic Republic of)" ~ "Iran (Islamic Republic of)",
country == "Lao People's Democratic Republic" ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
country == "Republic of Korea" ~ "South Korea",
TRUE ~ country)) |>
mutate(mandate = str_to_lower(mandate))
special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no))
special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no)) |>
arrange(desc(count)) |>
slice(1:5)
special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
arrange(desc(count)) |>
slice(1:5)
special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
arrange(desc(count)) |>
slice(1:5) |>
mutate(mandate = str_to_title(mandate))
special_procedures_top5 <- special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
arrange(desc(count)) |>
slice(1:5) |>
mutate(mandate = str_to_title(mandate))
special_procedures_top5 <- special_procedures |>
filter(country %in% country_list) |>
group_by(country, mandate) |>
summarise(count = n_distinct(ref_no)) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
arrange(desc(count)) |>
slice(1:5) |>
mutate(mandate = str_to_title(mandate)) |>
ungroup()
special_procedures_top5 |>
ggplot(aes(x = count,
y = mandate)) +
geom_col() +
facet_wrap(~ country)
special_procedures_top5 |>
ggplot(aes(x = count,
y = mandate)) +
geom_col() +
facet_wrap(~ country,
scales = "free_y")
special_procedures_top5 |>
ggplot(aes(x = count,
y = mandate)) +
geom_col() +
facet_wrap(~ country,
scales = "free")
special_procedures_top5 |>
count(country)
special_procedures_top5
special_procedures_top5 |>
count(country, wt = count)
special_procedures_top5 |>
count(country, wt = count, sort = TRUE)
special_procedures_top5 |>
count(country, wt = count, sort = TRUE) |>
slice(1:12) |> pull(country)
special_procedures_order <- special_procedures_top5 |>
count(country, wt = count, sort = TRUE) |>
slice(1:12) |> pull(country)
special_procedures_top5 |>
filter(country %in% special_procedures_order) |>
ggplot(aes(x = count,
y = mandate)) +
geom_col() +
facet_wrap(~ country,
scales = "free")
special_procedures_top5 |>
write_csv(here("data", "special_procedures_top5.csv"))
special_procedures_filtered <- special_procedures |>
filter(country %in% country_list)
special_procedures_filtered |> write_csv(here("data", "special_procedures_filtered.csv"))
population_estimates <- read_csv(here("data", "population_estimates.csv"))
population_estimates |>
filter(country %in% country_list)
population_estimates |>
filter(country %in% country_list) |>
count(country)
population_estimates |>
filter(country %in% country_list) |>
filter(year == 2023)
special_procedures_filtered |>
left_join(
population_estimates |>
filter(country %in% country_list &
year == 2023) |>
select(country, population),
by = "country"
)
