separate(perpetrator_non_state, sep = "\\|", remove = TRUE,
into = paste0("perp_non_state", 1:2)) |>
pivot_longer(cols = perp_non_state1:perp_non_state2,
names_to = "ignore5",
values_to = "perp_non_state_long") |>
filter(!is.na(perp_non_state_long) | !is.na(perp_state_long))
pivot_longer(cols = c(perp_state_long,perp_non_state_long),
names_to = "perp_type",
values_to = "perpetrator")
eparate(perpetrator_state, sep = "\\|", remove = TRUE,
into = paste0("perp_state", 1:4)) |>
pivot_longer(cols = perp_state1:perp_state4,
names_to = "ignore4",
values_to = "perp_state_long") |>
separate(perpetrator_non_state, sep = "\\|", remove = TRUE,
into = paste0("perp_non_state", 1:2)) |>
pivot_longer(cols = perp_non_state1:perp_non_state2,
names_to = "ignore5",
values_to = "perp_non_state_long") |>
filter(!is.na(perp_non_state_long) | !is.na(perp_state_long)) |>
pivot_longer(cols = c(perp_state_long,perp_non_state_long),
names_to = "perp_type",
values_to = "perpetrator")
hrd |>
select(-source, -related_events) |>
separate(perpetrator_state, sep = "\\|", remove = TRUE,
into = paste0("perp_state", 1:4)) |>
pivot_longer(cols = perp_state1:perp_state4,
names_to = "ignore4",
values_to = "perp_state_long") |>
separate(perpetrator_non_state, sep = "\\|", remove = TRUE,
into = paste0("perp_non_state", 1:2)) |>
pivot_longer(cols = perp_non_state1:perp_non_state2,
names_to = "ignore5",
values_to = "perp_non_state_long") |>
filter(!is.na(perp_non_state_long) | !is.na(perp_state_long)) |>
pivot_longer(cols = c(perp_state_long,perp_non_state_long),
names_to = "perp_type",
values_to = "perpetrator")
hrd_long <- hrd |>
# Revert to Asia forum, these 18 rows are missing key data
# that needs to be encoded
filter(!is.na(violation) | !is.na(rights_concerned) | !is.na(hrd)) |>
select(-source, -related_events) |>
mutate(initial_date = ifelse(is.na(initial_date), date_added, initial_date)) |>
separate(rights_concerned, sep = "\\|", remove = TRUE,
into = paste0("rights", 1:7)) |>
pivot_longer(cols = rights1:rights7,
names_to = "ignore1",
values_to = "rights_long") |>
filter(rights_long %out% c("Offline", "Online")) |>
separate(violation, sep = "\\|", remove = TRUE,
into = paste0("violation", 1:7)) |>
pivot_longer(cols = violation1:violation7,
names_to = "ignore2",
values_to = "violation_long") |>
separate(hrd, sep = "\\|", remove = TRUE,
into = paste0("hrd", 1:4)) |>
pivot_longer(cols = hrd1:hrd4,
names_to = "ignore3",
values_to = "hrd_long") |>
filter(!is.na(hrd_long) | !is.na(rights_long) | !is.na(violation_long)) |>
select(-c(ignore1, ignore2, ignore3)) |>
distinct(serial_number, country, initial_date, summary_for_publications,
rights_long, violation_long, hrd_long) |>
replace_na(list(final_date = "")) |>
pivot_longer(cols = c(rights_long, violation_long, hrd_long),
names_to = "category",
values_to = "event_tag") |>
filter(!is.na(event_tag)) |>
mutate(category = str_replace(category, "\\_long", "")) |>
distinct(serial_number,country, event_tag, category, initial_date, summary_for_publications)
hrd_long |>
filter(event_tag == "Right to healthy and safe environment")
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
pull(summary_for_publications)
hrd_long |> filter(str_detect(summary_for_publications, "denied"))
hrd_long |> filter(str_detect(summary_for_publications, "denied")) |>
sample_n(5) |>
pull(summary_for_publications)
net_freedom <- read_xlsx(here("data", "Freedom on the net 2023-11.xlsx")) |>
janitor::clean_names() |>
filter(country %in% country_list) |>
rename(year = edition)
net_freedom_filtered <- net_freedom |>
filter(country %in% country_list) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
mutate(freedom_status = case_when(
total_country_score <= 39 ~ "Not free",
total_country_score > 39 & total_country_score <= 69 ~ "Partly free",
total_country_score > 39 ~ "Free")) |>
pivot_longer(cols = c(a1:total_country_score),
names_to = "sub_indicator",
values_to = "score") |>
mutate(sub_indicator_text =
case_when(
sub_indicator == "a1" ~ "Infrastructural limitations",
sub_indicator == "a2" ~ "Internet accesibility",
sub_indicator == "a3" ~ "Government restrictions",
sub_indicator == "a4" ~ "Service provider diversity",
sub_indicator == "a5" ~ "Regulatory failure",
sub_indicator == "b1" ~ "Blocked content",
sub_indicator == "b2" ~ "Forced content deletion",
sub_indicator == "b3" ~ "Opaque, unacccountable procedures",
sub_indicator == "b4" ~ "Self-censorship",
sub_indicator == "b5" ~ "Information control and manipulation",
sub_indicator == "b6" ~ "Constraints on publishing",
sub_indicator == "b7" ~ "Lack diversity and reliability",
sub_indicator == "b8" ~ "Constraints on communities",
sub_indicator == "c1" ~ "Legal protections",
sub_indicator == "c2" ~ "Criminalised online activities",
sub_indicator == "c3" ~ "Individuals penalised",
sub_indicator == "c4" ~ "Restricted anonymous communication",
sub_indicator == "c5" ~ "State infringement of privacy",
sub_indicator == "c6" ~ "Data monitoring and retention",
sub_indicator == "c7" ~ "Extralegal intimidation",
sub_indicator == "c8" ~ "Cyberattacks",
sub_indicator == "total_country_score" ~ "Country Score",
sub_indicator == "a_obstacles_to_access" ~
"Obstacles to access",
sub_indicator == "b_limits_on_content" ~
"Limits on content",
sub_indicator == "c_violations_of_user_rights" ~
"Violations of user rights",
TRUE ~ sub_indicator
)) |>
mutate(sub_index_group =
case_when(
str_detect(sub_indicator, "a[0-9]") ~ "Obstructions to access",
str_detect(sub_indicator, "b[0-9]") ~ "Limits on content",
str_detect(sub_indicator, "c[0-9]") ~ "Violation of user rights",
TRUE ~ "aggregation"
)) |>
filter(!is.na(score))
net_freedom_filtered |> glimpse()
net_freedom_filtered |> filter(is.na(sub_index_group))
set.seed(4)
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
pull(summary_for_publications)
set.seed(45)
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
pull(summary_for_publications)
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
pull(summary_for_publications) |>
kable(caption = "Summaries of reports tagged with 'Right to safe and healthy environment'") |>
kable_styling(bootstrap_options = c("condensed"))
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
select(summary_for_publications) |>
kable(caption = "Summaries of reports tagged with 'Right to safe and healthy environment'") |>
kable_styling(bootstrap_options = c("condensed"))
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
select(`Summary for publications` = summary_for_publications) |>
kable(caption = "Summaries of reports tagged with 'Right to safe and healthy environment'") |>
kable_styling(bootstrap_options = c("condensed"))
set.seed(435)
hrd_long |>
filter(event_tag == "Right to healthy and safe environment") |>
sample_n(5) |>
select(`Summary for publications` = summary_for_publications) |>
kable(caption = "Summaries of reports tagged with 'Right to safe and healthy environment'") |>
kable_styling(bootstrap_options = c("condensed"))
hrd |>
select(-source, -related_events) |>
separate(perpetrator_state, sep = "\\|", remove = TRUE,
into = paste0("perp_state", 1:4)) |>
pivot_longer(cols = perp_state1:perp_state4,
names_to = "ignore4",
values_to = "perp_state_long") |>
separate(perpetrator_non_state, sep = "\\|", remove = TRUE,
into = paste0("perp_non_state", 1:2)) |>
pivot_longer(cols = perp_non_state1:perp_non_state2,
names_to = "ignore5",
values_to = "perp_non_state_long") |>
filter(!is.na(perp_non_state_long) | !is.na(perp_state_long)) |>
pivot_longer(cols = c(perp_state_long,perp_non_state_long),
names_to = "perp_type",
values_to = "perpetrator")
hrd |>
select(-source, -related_events) |>
separate(perpetrator_state, sep = "\\|", remove = TRUE,
into = paste0("perp_state", 1:4)) |>
pivot_longer(cols = perp_state1:perp_state4,
names_to = "ignore4",
values_to = "perp_state_long") |>
separate(perpetrator_non_state, sep = "\\|", remove = TRUE,
into = paste0("perp_non_state", 1:2)) |>
pivot_longer(cols = perp_non_state1:perp_non_state2,
names_to = "ignore5",
values_to = "perp_non_state_long") |>
filter(!is.na(perp_non_state_long) | !is.na(perp_state_long)) |>
pivot_longer(cols = c(perp_state_long,perp_non_state_long),
names_to = "perp_type",
values_to = "perpetrator") |> count(perpetrator, perp_type)
set.seed(22391)
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
types = paste0(type, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, types) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
categories = paste0(category, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, categories) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
set.seed(223931)
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
categories = paste0(category, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, categories) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
categories = paste0(category, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, categories) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
set.seed(223331)
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
categories = paste0(category, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, categories) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
categories = paste0(category, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, categories) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
set.seed(223)
hrd_long |>
filter(!is.na(summary_for_publications)) |>
filter(serial_number %out% one_type_of_tag) |>
group_by(serial_number) |>
mutate(tag_count = n_distinct(event_tag)) |>
ungroup() |>
filter(tag_count < 3) |>
group_by(summary_for_publications) |>
mutate(event_tags = paste0(event_tag, collapse = ", "),
categories = paste0(category, collapse = ", ")) |>
ungroup() |>
distinct(serial_number, summary_for_publications, event_tags, categories) |>
sample_n(5) |>
kable(caption = "Sample of reports with low numbers of tags") |>
kable_styling(bootstrap_options = c("condensed"))
perp <- hrd |>
select(-source, -related_events) |>
separate(perpetrator_state, sep = "\\|", remove = TRUE,
into = paste0("perp_state", 1:4)) |>
pivot_longer(cols = perp_state1:perp_state4,
names_to = "ignore4",
values_to = "perp_state_long") |>
separate(perpetrator_non_state, sep = "\\|", remove = TRUE,
into = paste0("perp_non_state", 1:2)) |>
pivot_longer(cols = perp_non_state1:perp_non_state2,
names_to = "ignore5",
values_to = "perp_non_state_long") |>
filter(!is.na(perp_non_state_long) | !is.na(perp_state_long)) |>
pivot_longer(cols = c(perp_state_long,perp_non_state_long),
names_to = "perp_type",
values_to = "perpetrator")
perp |> filter(is.na(perpetrator))
set.seed(4)
hrd |>
filter(is.na(perpetrator_state) & is.na(perpetrator_non_state)) |>
sample_n(5) |>
pull(summary_for_publications)
perp |> count(perpetrator)
perp |> count(perpetrator, sort = TRUE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
fig.width = 9.5)
library(tidyverse)
library(here)
library(lubridate)
library(patchwork)
library(scales)
library(sf)
library(broom)
library(treemapify)
library(kableExtra)
library(readxl)
library(countrycode)
library(viridis)
library(ggraph)
library(ggforce)
library(plotly)
library(widyr)
library(tidytext)
library(janitor)
library(vdemdata)
`%out%` <- Negate(`%in%`)
options(scipen = 100)
theme_set(theme_light())
show_col(viridis_pal(option = "cividis")(8))
country_list <- c("Afghanistan", "Bangladesh", "Bhutan", "Cambodia",
"China", "Fiji", "Hong Kong", "India", "Indonesia",
"Iran", "North Korea", "South Korea", "Laos",
"Malaysia", "Maldives", "Mongolia", "Myanmar",
"Nepal", "Pakistan", "Papua New Guinea", "Philippines",
"Solomon Islands", "Sri Lanka", "Thailand", "Timor-Leste",
"Vanuatu", "Vietnam")
world_shape <- st_read(here("data",
"world-administrative-boundaries",
"world-administrative-boundaries.shp"),
quiet = TRUE)
population_estimates <- read_csv(here("data", "population_estimates.csv")) |>
mutate(country_iso = countrycode(country,
origin = "country.name",
destination = "iso3c"))
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
hri <- read_excel(here("data", "human_rights_index.xlsx"))
hri |> glimpse()
hri |> clean_names() |>
count(countries_concerned)
hri |>glimpse()
library(vdemdata)
vdem |> glimpse()
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"))
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow"))
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2xeg_eqdr)
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2xeg_eqdr) |>
pivot_longer(cols = c(v2x_polyarchy:v2xeg_eqdr),
names_to = "index",
values_to = "value")
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2xeg_eqdr) |>
pivot_longer(cols = c(v2x_polyarchy:v2x_egaldem),
names_to = "index",
values_to = "value") |>
mutate(index_text =
case_when(
index == "v2x_polyarchy", ~ "Electoral democracy index",
index == "v2x_libdem", ~ "Liberal democracy index",
index == "v2x_partipdem", ~ "Participatory democracy index",
index == "v2x_delibdem", ~ "Deliberative democracy index",
index == "v2x_egaldem", ~ "Egalitarian democracy index",
TRUE ~ index
))
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2xeg_eqdr) |>
pivot_longer(cols = c(v2x_polyarchy:v2x_egaldem),
names_to = "index",
values_to = "value") |>
mutate(index_text =
case_when(
index == "v2x_polyarchy" ~ "Electoral democracy index",
index == "v2x_libdem" ~ "Liberal democracy index",
index == "v2x_partipdem" ~ "Participatory democracy index",
index == "v2x_delibdem" ~ "Deliberative democracy index",
index == "v2x_egaldem" ~ "Egalitarian democracy index",
TRUE ~ index
))
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2xeg_eqdr) |>
pivot_longer(cols = c(v2x_polyarchy:v2xeg_eqdr),
names_to = "index",
values_to = "value") |>
mutate(index_text =
case_when(
index == "v2x_polyarchy" ~ "Electoral democracy index",
index == "v2x_libdem" ~ "Liberal democracy index",
index == "v2x_partipdem" ~ "Participatory democracy index",
index == "v2x_delibdem" ~ "Deliberative democracy index",
index == "v2x_egaldem" ~ "Egalitarian democracy index",
TRUE ~ index
))
vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2x_egaldem) |>
pivot_longer(cols = c(v2x_polyarchy:v2x_egaldem),
names_to = "index",
values_to = "value") |>
mutate(index_text =
case_when(
index == "v2x_polyarchy" ~ "Electoral democracy index",
index == "v2x_libdem" ~ "Liberal democracy index",
index == "v2x_partipdem" ~ "Participatory democracy index",
index == "v2x_delibdem" ~ "Deliberative democracy index",
index == "v2x_egaldem" ~ "Egalitarian democracy index",
TRUE ~ index
))
vdem <- vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2x_egaldem) |>
pivot_longer(cols = c(v2x_polyarchy:v2x_egaldem),
names_to = "index",
values_to = "value") |>
mutate(index_text =
case_when(
index == "v2x_polyarchy" ~ "Electoral democracy index",
index == "v2x_libdem" ~ "Liberal democracy index",
index == "v2x_partipdem" ~ "Participatory democracy index",
index == "v2x_delibdem" ~ "Deliberative democracy index",
index == "v2x_egaldem" ~ "Egalitarian democracy index",
TRUE ~ index
))
vdem_export <- vdem |>
filter(country_name %in% country_list) |>
select(country_name, year, matches("v2x"),
-matches("sd|codehigh|codelow")) |>
select(country_name, year, v2x_polyarchy:v2x_egaldem) |>
pivot_longer(cols = c(v2x_polyarchy:v2x_egaldem),
names_to = "index",
values_to = "value") |>
mutate(index_text =
case_when(
index == "v2x_polyarchy" ~ "Electoral democracy index",
index == "v2x_libdem" ~ "Liberal democracy index",
index == "v2x_partipdem" ~ "Participatory democracy index",
index == "v2x_delibdem" ~ "Deliberative democracy index",
index == "v2x_egaldem" ~ "Egalitarian democracy index",
TRUE ~ index
))
vdem |> write_csv(here("data", "vdem_export.csv"))
