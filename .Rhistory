rename(atoll_local_names = atoll)
atolls_official <- read_csv(here("data", "marwa_atolls.csv"))
maldives |>
filter(!is.na(island) & indicator == "Population") |>
group_by(island = island_correct, atoll_official) |>
summarise(population = sum(value), .groups = "drop") |>
write_csv(here("data", "mal_island_population.csv"))
maldives |>
filter(!is.na(island) & indicator == "Population") |>
group_by(island = island_correct, atoll_official) |>
summarise(population = sum(value), .groups = "drop") |>
write_csv(here("data", "mal_island_population.csv"))
maldives |>
filter(!is.na(island) & indicator == "Population") |>
group_by(island = island_correct, atoll_official) |>
summarise(population = sum(value), .groups = "drop")
maldives |>
filter(!is.na(island) & indicator == "Population") |>
group_by(island = island_correct, atoll_official) |>
summarise(population = sum(value), .groups = "drop") |>
mutate(concat = paste0(island, ", ", atoll_official)) |>
write_csv(here("data", "mal_island_population.csv"))
islands_atolls <- read_xlsx(here("data", "Atoll - Island-Level-Indicator-Sheet-Population Cleaned V1.xlsx"),
sheet = 1,
skip = 7,
col_names = island_colnames) |>
slice(1:186) |>
distinct(Atoll, island = Locality) |>
left_join(
maldives |>
mutate(Atoll = str_extract_all(atoll_local_names, "\\([^()]+\\)"),
Atoll = str_remove_all(Atoll, "\\(|\\)")) |>
filter(!is.na(island)) |>
distinct(Atoll, island, atoll_official) |>
mutate(Atoll = case_when(Atoll == "ADh" ~ "Adh",
TRUE ~ Atoll),
island = case_when(island == "Mundhoo" ~ "Mundoo",
island == "Madeveli" ~ "Madaveli",
TRUE ~ island)),
by = c("Atoll", "island")
) |>
arrange(atoll_official)
islands <- read_xlsx(here("data", "Atoll - Island-Level-Indicator-Sheet-Population Cleaned V1.xlsx"),
sheet = 1,
skip = 7,
col_names = island_colnames) |>
slice(1:186) |>
rename(island = Locality) |>
left_join(
islands_atolls,
by = c("island", "Atoll")
) |>
pivot_longer(cols = `Resident Population Both sexes`:`Median Age Resident Foreigners`,
names_to = "indicator_full",
values_to = "value") |>
filter(!str_detect(indicator_full, "Resident Maldivians 2014")) |>
mutate(sex_modifier =
case_when(
str_detect(indicator_full, "Both sexes") ~ "Both sexes",
str_detect(indicator_full, "Male") ~ "Male",
str_detect(indicator_full, "Female") ~ "Female",
TRUE ~ NA_character_
),
population_modifier =
case_when(
str_detect(indicator_full, "Resident Population") ~ "Resident Population",
str_detect(indicator_full, "Resident Maldivian") ~ "Resident Maldivians",
str_detect(indicator_full, "Residnet Foreign") ~ "Resident Foreigners",
TRUE ~ NA_character_
)) |>
left_join(
atolls_official |>
distinct(atoll_official = Atoll, atoll_official_name = `Atoll Official Name`),
by = "atoll_official"
) |>
filter(!is.na(population_modifier)) |>
mutate(concat = paste0(island, ", ", atoll_official)) |>
filter(indicator_full %out% c("Median Age Resident Foreigners",
"Resident Foreigners Population Both sexes")) |>
mutate(indicator = str_remove(indicator_full, "Resident Maldivian Population"),
indicator2 = indicator,
value2 = value,
index = paste0(island, ", ",  Atoll))
islands |> glimpse()
islands |> count(indicator_full)
isalnds |>
filter(indicator_full == "Median Age Resident Maldivians") |>
glimpse()
islands |>
filter(indicator_full == "Median Age Resident Maldivians") |>
glimpse()
islands |>
filter(indicator_full == "Median Age Resident Maldivians") |>
ggplot(aes(x = value)) +
geom_histogram()
islands |>
filter(indicator_full == "Median Age Resident Maldivians") |>
count(value)
islands |> count(indicator_full)
islands |>
filter(indicator_full %in% c ("Median Age Resident Maldivians", "Population density Total Resident Population")) |>
glimpse()
islands |>
filter(indicator_full %in% c ("Median Age Resident Maldivians", "Population density Total Resident Population")) |>
pivot_wider(names_from = indicator, values_from = value) |>
glimpse()
islands |>
filter(indicator_full %in% c ("Median Age Resident Maldivians", "Population density Total Resident Population")) |>
pivot_wider(names_from = indicator, values_from = value) |>
ggplot(aes(x = `Population density Total Resident Population`, y = "`Median Age Resident Maldivians`")) +
geom_point()
islands |>
filter(indicator_full %in% c ("Median Age Resident Maldivians", "Population density Total Resident Population")) |>
pivot_wider(names_from = indicator, values_from = value) |>
ggplot(aes(x = `Population density Total Resident Population`, y = `Median Age Resident Maldivians`)) +
geom_point()
islands |>
filter(indicator_full %in% c ("Median Age Resident Maldivians", "Population density Total Resident Population")) |>
pivot_wider(names_from = indicator, values_from = value)
islands |>
filter(indicator_full %in% c ("Median Age Resident Maldivians", "Population density Total Resident Population")) |>
select(concat, indicator, value) |>
pivot_wider(names_from = indicator, values_from = value) |>
ggplot(aes(x = `Population density Total Resident Population`, y = `Median Age Resident Maldivians`)) +
geom_point()
islands |>
filter(indicator_full == "Resident Population Both sexes") |>
select(island, atoll_official, population = value) |>
left_join(
atolls_official |>
distinct(atoll_official = Atoll, `Atoll Official Name`),
by = c("atoll_official")
) |>
rename(atoll_local_name = `Atoll Official Name`) |>
mutate(concat = paste0(island, ", ", atoll_official)) |>
write_csv(here("data", "islands_pop.csv"))
islands |>
filter(indicator_full == "Resident Population Both sexes") |>
select(island, atoll_official, population = value) |>
left_join(
atolls_official |>
distinct(atoll_official = Atoll, `Atoll Official Name`),
by = c("atoll_official")
) |>
rename(atoll_local_name = `Atoll Official Name`) |>
mutate(concat = paste0(island, ", ", atoll_official))
islands |> count(indicator)
islands |> glimpse()
islands |> count(indicator_full)
islands |>
count(indicator)
islands |>
count(sex_modifier, population_modifier)
islands |> filter(is.na(sex_modifier)) |> count(indicator)
islands |>
count(sex_modifier, population_modifier)
islands |> filter(!is.na(sex_modifier)) |> count(indicator)
islands <- read_xlsx(here("data", "Atoll - Island-Level-Indicator-Sheet-Population Cleaned V1.xlsx"),
sheet = 1,
skip = 7,
col_names = island_colnames) |>
slice(1:186) |>
rename(island = Locality) |>
left_join(
islands_atolls,
by = c("island", "Atoll")
) |>
pivot_longer(cols = `Resident Population Both sexes`:`Median Age Resident Foreigners`,
names_to = "indicator_full",
values_to = "value") |>
filter(!str_detect(indicator_full, "Resident Maldivians 2014")) |>
mutate(sex_modifier =
case_when(
str_detect(indicator_full, "Both sexes") ~ "Both sexes",
str_detect(indicator_full, "Male") ~ "Male",
str_detect(indicator_full, "Female") ~ "Female",
TRUE ~ NA_character_
),
population_modifier =
case_when(
str_detect(indicator_full, "Resident Population") ~ "Resident Population",
str_detect(indicator_full, "Resident Maldivian") ~ "Resident Maldivians",
str_detect(indicator_full, "Residnet Foreign") ~ "Resident Foreigners",
TRUE ~ NA_character_
)) |>
left_join(
atolls_official |>
distinct(atoll_official = Atoll, atoll_official_name = `Atoll Official Name`),
by = "atoll_official"
) |>
filter(!is.na(population_modifier)) |>
mutate(concat = paste0(island, ", ", atoll_official)) |>
filter(indicator_full %out% c("Median Age Resident Foreigners",
"Resident Foreigners Population Both sexes")) |>
mutate(indicator = str_remove(indicator_full, "Resident Maldivian Population"),
indicator2 = indicator,
value2 = value) |>
mutate(index = case_when(
is.na(sex_modifier) ~ "Demographic statistics",
TRUE ~ "Population counts"
))
islands |> count(index, sex_modifier, population_modifier)
islands |> writexl::write_xlsx(here("data", "islands_indicators2.xlsx"))
islands |> writexl::write_xlsx(here("data", "islands_indicators1.xlsx"))
maldives_crimes <- maldives |>
filter(atoll_official %out% c("Industrial Islands", "Resorts")) |>
filter(indicator %in% c("Cases Sent for Prosecution",
"Economic and Financial Abuse",
"Emotional Abuse",
"Intimidating",
"Investigated Cases",
"Physical Abuse",
"Sexual Abuse",
"Sexual Harrasment",
"Stalking",
"Population",
"Reported Crimes")) |>
group_by(atoll_official, atoll_local_names, indicator) |>
summarise(value = sum(value)) |>
group_by(atoll_official, atoll_local_names) |>
mutate(population = ifelse(indicator == "Population", value, NA_integer_)) |>
fill(population, .direction = c("downup")) |>
ungroup() |>
filter(indicator != "Population") |>
mutate(value = value / population * 100000,
indicator = paste0(indicator, " per 100k")) |>
select(-population)
maldives_demographics <- maldives |>
filter(atoll_official %out% c("Industrial Islands", "Resorts")) |>
filter(indicator %in% c("Child Population (0-17 yrs)",
"Youth Population (National) (18-35 yrs)",
"Working Age Population (15-64 yrs)",
"Elderly Population (65+ yrs)",
"Adolescent Population (International) (10-19 yrs)",
"Population",
"Population density",
"Sex Ratio (males per 100 female)")) |>
group_by(atoll_official, atoll_local_names, indicator) |>
summarise(value = sum(value),
.groups = "drop")
maldives_economy <- maldives |>
filter(atoll_official %out% c("Industrial Islands", "Resorts")) |>
filter(indicator %in% c(
"Aged-Dependency Ratio",
"Child Dependency Ratio",
"Combined rate of unemployment and potential labour force (%)",
"Employment-to-population ratio (%)",
"Inactivity rate (%)",
"Dependency Ratio",
"Employment-to-population ratio (%)",
"Youth unemployment rate (15-24 years)",
"Youth unemployment rate (18-35years)",
"Labour force participation rate (%)",
"Median age",
"Growth Rate ( 2014 to 2022)",
"Unemployment rate (%)",
"NEET rate (15-24 years) (%)",
"NEET rate (18-35 years) (%)"
)) |>
group_by(atoll_official, atoll_local_names, indicator) |>
summarise(value = mean(value, na.rm = TRUE),
.groups = "drop")
maldives_atoll <- rbind(
maldives_poverty,
maldives_economy,
maldives_demographics,
maldives_crimes
) |>
left_join(
atolls_official |>
distinct(atoll_official = Atoll, atoll_official_name = `Atoll Official Name`),
by = "atoll_official"
) |>
group_by(indicator) |>
mutate(range = range_wna(value)) |>
ungroup() |>
mutate(indicator2 = indicator,
value2 = value,
range2 = range) |>
select(
atoll_official,
atoll_local_names,
atoll_official_name,
indicator,
value,
range,
indicator2,
value2,
range2
)
maldives_atoll |>
glimpse()
maldives_atoll |>
count(indicator)
islands |>
glimpse()
rbind(
maldives_atoll |>
count(indicator) |>
mutate(admin_level = "Atoll"),
islands |>
count(indicator) |>
mutate(admin_level = "Island"))
rbind(
maldives_atoll |>
count(indicator) |>
mutate(admin_level = "Atoll"),
islands |>
count(indicator) |>
mutate(admin_level = "Island")) |>
rename(observations = n)
rbind(
maldives_atoll |>
count(indicator) |>
mutate(admin_level = "Atoll"),
islands |>
count(indicator) |>
mutate(admin_level = "Island")) |>
rename(observations = n) |>
write_csv(here("data", "maldives_indicator_list.csv"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
fig.width = 9.5)
library(tidyverse)
library(here)
library(lubridate)
library(patchwork)
library(scales)
library(sf)
library(broom)
library(treemapify)
library(kableExtra)
library(readxl)
library(countrycode)
library(viridis)
library(ggraph)
library(ggforce)
library(plotly)
library(widyr)
library(tidytext)
library(janitor)
`%out%` <- Negate(`%in%`)
options(scipen = 100)
theme_set(theme_light())
show_col(viridis_pal(option = "cividis")(8))
country_list <- c("Australia", "Afghanistan", "Bangladesh", "Bhutan", "Cambodia",
"China", "Fiji", "Hong Kong", "Japan", "India", "Indonesia",
"Iran",  "Laos", "Malaysia", "Maldives", "Mongolia", "Myanmar",
"Nepal", "New Zealand",  "North Korea", "Pakistan", "Papua New Guinea",
"Philippines", "Singapore", "Solomon Islands", "South Korea",
"Sri Lanka", "Thailand", "Timor-Leste", "Vanuatu", "Vietnam")
world_shape <- st_read(here("data",
"world-administrative-boundaries",
"world-administrative-boundaries.shp"),
quiet = TRUE)
population <- read_csv(here("data", "wdi_all_countries_population.csv")) |>
janitor::clean_names()  %>%
mutate(across(matches("_yr"), ~ as.numeric(.))) |>
pivot_longer(cols = x2000_yr2000:x2023_yr2023,
names_to = "year",
values_to = "population") |>
mutate(year = str_sub(year, start = -4, end = -1),
year = as.double(year)) |>
rename(country = country_name) |>
mutate(country =
case_when(str_detect(country, "Korea, Rep.") ~ "South Korea",
str_detect(country, "Korea, Dem. People's Rep.") ~ "North Korea",
str_detect(country, "Hong Kong SAR, China") ~ "Hong Kong",
str_detect(country, "Iran, Islamic Rep.") ~ "Iran",
str_detect(country, "Lao PDR") ~ "Laos",
country == "Viet Nam" ~ "Vietnam",
TRUE ~ country),
country_iso = countrycode::countrycode(country,
origin = "country.name",
destination = "iso3c")) |>
filter(!is.na(country) &
country %out% c("Data from database: World Development Indicators",
"Last Updated: 06/28/2024"))
population_estimates <- crossing(country = population$country, year = 2000:2024) |>
left_join(population |>
select(year, country, population),
by = c("year", "country")) |>
group_by(country) %>%
fill(population, .direction = "updown")
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
readxl(here("data", "hate_speech_keywords_N.xlsx"))
read_excel(here("data", "hate_speech_keywords_N.xlsx"))
read_excel(here("data", "hate_speech_keywords_N.xlsx")) |>
count(Engagement)
read_excel(here("data", "hate_speech_keywords_N.xlsx")) |>
mutate(estimated_engagement =
case_when(Engagement == "<100" ~ 100,
Engagement == "100-1000" ~ 1000,
Engagement == "1000-10000" ~ 10000)) |>
writexl::write_xlsx(here("data", "hate_speech_keywords_N_alt.xlsx"))
read_excel(here("data", "hate_speech_keywords_N.xlsx")) |>
mutate(estimated_engagement =
case_when(Engagement == "<100" ~ 50,
Engagement == "100-1000" ~ 500,
Engagement == "1000-10000" ~ 5000)) |>
writexl::write_xlsx(here("data", "hate_speech_keywords_N_alt.xlsx"))
read_excel(here("data", "INFORM_Sub-national Risk Index for Bangladesh_ 2022_Admin Level-2_V1.xlsx"))
read_excel(here("data", "INFORM_Sub-national Risk Index for Bangladesh_ 2022_Admin Level-2_V1.xlsx")) |>
glimpse()
read_excel(here("data", "CARU_Security_incident_2023.xlsx"))
caru <- read_excel(here("data", "CARU_Security_incident_2023.xlsx")) |>
clean_names() |>
mutate(sub_category = str_remove_all(sub_category,
"Insecurity-|Movement-|Violece-|Violence-|Death-|Drug-")) |>
mutate(nationality_of_perpetrator = case_when(
nationality_of_perpetrator %in% c("Bangaldeshi", "Bangladesh", "Bangladesi", "Bangldeshi") ~ "Bangladeshi",
str_detect(nationality_of_perpetrator, "NAP|Nap") ~ "NAp",
str_detect(nationality_of_perpetrator, "NAV|Nav") ~ "NAv",
nationality_of_perpetrator == "Bangladeshi and Rohingya" ~ "Rohingya and Bangladeshi",
TRUE ~ nationality_of_perpetrator
)) |>
naniar::replace_with_na(list(nationality_of_perpetrator = "Unknown")) |>
mutate(date = ymd(date))
caru
caru |>
writexl::write_xlsx(here("data", "caru_bangladesh.xlsx"))
caru |> glimpse()
caru %>%
mutate_at(vars(c(year, week, longitude, latitude, time)),
~ as.numeric(.)) |>
glimpse()
caru <- read_excel(here("data", "CARU_Security_incident_2023.xlsx")) |>
clean_names() |>
mutate(sub_category = str_remove_all(sub_category,
"Insecurity-|Movement-|Violece-|Violence-|Death-|Drug-")) |>
mutate(nationality_of_perpetrator = case_when(
nationality_of_perpetrator %in% c("Bangaldeshi", "Bangladesh", "Bangladesi", "Bangldeshi") ~ "Bangladeshi",
str_detect(nationality_of_perpetrator, "NAP|Nap") ~ "NAp",
str_detect(nationality_of_perpetrator, "NAV|Nav") ~ "NAv",
nationality_of_perpetrator == "Bangladeshi and Rohingya" ~ "Rohingya and Bangladeshi",
TRUE ~ nationality_of_perpetrator
)) |>
naniar::replace_with_na(list(nationality_of_perpetrator = "Unknown")) |>
mutate(date = ymd(date)) %>%
mutate_at(vars(c(year, week, longitude, latitude, time)),
~ as.numeric(.)) |
```
caru <- read_excel(here("data", "CARU_Security_incident_2023.xlsx")) |>
clean_names() |>
mutate(sub_category = str_remove_all(sub_category,
"Insecurity-|Movement-|Violece-|Violence-|Death-|Drug-")) |>
mutate(nationality_of_perpetrator = case_when(
nationality_of_perpetrator %in% c("Bangaldeshi", "Bangladesh", "Bangladesi", "Bangldeshi") ~ "Bangladeshi",
str_detect(nationality_of_perpetrator, "NAP|Nap") ~ "NAp",
str_detect(nationality_of_perpetrator, "NAV|Nav") ~ "NAv",
nationality_of_perpetrator == "Bangladeshi and Rohingya" ~ "Rohingya and Bangladeshi",
TRUE ~ nationality_of_perpetrator
)) |>
naniar::replace_with_na(list(nationality_of_perpetrator = "Unknown")) |>
mutate(date = ymd(date)) %>%
mutate_at(vars(c(year, week, longitude, latitude, time)),
~ as.numeric(.))
caru |>
writexl::write_xlsx(here("data", "caru_bangladesh.xlsx"))
caru |>
writexl::write_xlsx(here("data", "caru_bangladesh.xlsx"))
caru |> write_csv(here("data", "caru.csv"))
caru <- read_excel(here("data", "CARU_Security_incident_2023.xlsx")) |>
clean_names() |>
mutate(sub_category = str_remove_all(sub_category,
"Insecurity-|Movement-|Violece-|Violence-|Death-|Drug-")) |>
mutate(nationality_of_perpetrator = case_when(
nationality_of_perpetrator %in% c("Bangaldeshi", "Bangladesh", "Bangladesi", "Bangldeshi") ~ "Bangladeshi",
str_detect(nationality_of_perpetrator, "NAP|Nap") ~ "NAp",
str_detect(nationality_of_perpetrator, "NAV|Nav") ~ "NAv",
nationality_of_perpetrator == "Bangladeshi and Rohingya" ~ "Rohingya and Bangladeshi",
TRUE ~ nationality_of_perpetrator
)) |>
naniar::replace_with_na(list(nationality_of_perpetrator = "Unknown")) |>
mutate(date = ymd(date)) %>%
mutate_at(vars(c(year, week, longitude, latitude, time)),
~ as.numeric(.))
caru |> skimr::skim()
caru |>
filter(!is.na(year) & !is.na(longitude) & !is.na(latitude)) |>
glimpse()
caru |> skimr::skim()
caru |>
filter(!is.na(year) & !is.na(longitude) & !is.na(latitude)) |>
replace_na(list(
time = 0,
death_bd_f = 0
)) |>
select(-column2)
caru <- read_excel(here("data", "CARU_Security_incident_2023.xlsx")) |>
clean_names() |>
mutate(sub_category = str_remove_all(sub_category,
"Insecurity-|Movement-|Violece-|Violence-|Death-|Drug-")) |>
mutate(nationality_of_perpetrator = case_when(
nationality_of_perpetrator %in% c("Bangaldeshi", "Bangladesh", "Bangladesi", "Bangldeshi") ~ "Bangladeshi",
str_detect(nationality_of_perpetrator, "NAP|Nap") ~ "NAp",
str_detect(nationality_of_perpetrator, "NAV|Nav") ~ "NAv",
nationality_of_perpetrator == "Bangladeshi and Rohingya" ~ "Rohingya and Bangladeshi",
TRUE ~ nationality_of_perpetrator
)) |>
naniar::replace_with_na(list(nationality_of_perpetrator = "Unknown")) |>
mutate(date = ymd(date)) %>%
mutate_at(vars(c(year, week, longitude, latitude, time)),
~ as.numeric(.)) |>
filter(!is.na(year) & !is.na(longitude) & !is.na(latitude)) |>
replace_na(list(
time = 0,
death_bd_f = 0
)) |>
select(-column2)
caru |>
writexl::write_xlsx(here("data", "caru_bangladesh.xlsx"))
